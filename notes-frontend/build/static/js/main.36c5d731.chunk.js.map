{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","returnedNote","concat","setTimeout","handleNoteChange","target","value","notesToShow","filter","handleLogin","loginService","setItem","stringify","onSubmit","type","name","onChange","removeItem","map","i","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36c5d731.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  if (newToken) {\r\n    token = `bearer ${newToken}`\r\n  }\r\n  else {\r\n    delete axios.token\r\n  }\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\nimport loginService from './services/login'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return ( \n    <div style={footerStyle}> \n      <br />\n      <em> Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n  \n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n        setErrorMessage(\n          `Note '${newNote}' was added`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    //const url = `api/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))     \n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      setUser(user)\n      noteService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedNoteappUser', JSON.stringify(user)\n      ) \n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n\n  const logoutUser = () =>  {\n    localStorage.removeItem('loggedNoteappUser')\n    noteService.setToken(false)\n    setUser(null)\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const noteForm = () => (\n    <form onSubmit={addNote}>\n      <input\n        value={newNote}\n        onChange={handleNoteChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>  \n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in \n          <button onClick={() => logoutUser()}>\n            logout\n          </button>\n          </p>\n          {noteForm()}\n          <div>\n            <button onClick={() => setShowAll(!showAll)}>\n              show {showAll ? 'important' : 'all' }\n            </button>\n          </div>\n          <ul>\n            {notesToShow.map((note, i) => \n              <Note\n                key={i}\n                note={note} \n                toggleImportance={() => toggleImportanceOf(note.id)}\n              />\n            )}\n          </ul>\n        </div>\n      }\n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}